pipeline {

    agent none

    stages {
        stage('build') {
                agent {
        docker{
            image "node:8.16.0-alpine"
        }
    }
            when {
             changeset "**/result/**"
            }
                 
            steps {
                echo 'Installing npm for result app'
                dir('result'){
                        sh "npm install"
                }
            }
        }
        stage('test') {
        agent {
        docker{
            image "node:8.16.0-alpine"
        }
    }
            when {
             changeset "**/result/**"
            }
                 
            steps {
                echo 'Installing and testing npm for result app'
                dir ('result'){
                    sh "npm install && npm test"
                }
            }
        }
                stage('docker-package') {
            
            when {
             changeset "**/result/**"
             branch 'master'
            }
                 
            steps {
                echo 'Installing and testing npm for result app'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                        def resultImage = docker.build("jlargaespada/result:v${env.BUILD_ID}", "./result")
                        resultImage.push()
                        resultImage.push("${env.BRANCH_NAME}")
                        resultImage.push("latest")
                    }
                }
            }
        }
        }
               
    post {
        always {
            echo "Pipeline for result node js run is complete.."
        }
        failure {
                slackSend (channel: "test-jenkins", message: "Build failure - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
                slackSend (channel: "test-jenkins", message: "Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
