pipeline {
    agent none


    stages {
        stage('build') {
         agent {
        docker{
            image "maven:3.6.1-jdk-8-alpine"
            args '-v $HOME/.m2:/root/.m2'
        }
    }
	    when {
	     changeset "**/worker/**"}
		 
            steps {
                echo 'compiling worker app'
                dir('worker'){
			sh "mvn compile"
            }
            }
		}
        stage('test') {
        agent {
        docker{
            image "maven:3.6.1-jdk-8-alpine"
            args '-v $HOME/.m2:/root/.m2'
        }
    }
	    when {
	     changeset "**/worker/**"}
		 
            steps {
                echo 'running tests on worker app'
		dir ('worker'){
		    sh "mvn clean test"	}                
                }
            }
        stage('docker-package'){
        agent any
	    when {
	     
	     changeset "**/worker/**"
         branch 'master'
         }
		    steps {
                echo 'packaging worker app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                        def workerImage = docker.build("jlargaespada/worker:v${env.BUILD_ID}", "./worker")
                        workerImage.push("${env.BUILD_ID}")
                    }
                }
                }
            }
	}
	       
    post {
        always {
            echo "Pipeline for worker run is complete.."
        }
        failure {
		slackSend (channel: "test-jenkins", message: "Build failure - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
		slackSend (channel: "test-jenkins", message: "Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
